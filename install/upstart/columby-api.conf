#!upstart
#       /etc/init/columby-api.conf
#
#       columby-api - Provisioned using forever-service
#
#       CLI node /usr/local/bin/forever-service install -s server.js -e NODE_ENV=staging -r columby columby-api
#       Working Directory /home/columby/www/api.columby.com/dist/server
#

description "forever-service startup script for node script based service columby-api, uses forever to start the service"

env FOREVER_ROOT=/home/columby/.forever

start on (local-filesystems and net-device-up IFACE=eth0)
stop on shutdown

expect fork

# Check if any of $pid (could be plural) are running
env LOGFILE="/var/log/columby/api/node-columby-api.log"

# introduce some gaps between restarts and throttle continuous restarts
env MIN_UPTIME="5000"
env SPIN_SLEEP_TIME="2000"

# kill signal: Since default needs to be SIGTERM, it is important that services gracefully shutdown,
# specially if they are doing transactions or other work which should not be interuppted in between
# for exceptional situation where you dont care about abrupt shutdown, SIGKILL should be used
env KILL_SIGNAL="SIGTERM"

# Wait time afer with SIGKILL will be sent to the process, in case SIGTERM is not fully finished
# This is required since when we use SIGTERM, some times if there is problem in code, it might take lot of time for process to exit
# or process may never exit, in such siutation we have to forcebly kill it so that shutdown or service restart can be done appropriately
# this wait time is in millisecond
env KILLWAITTIME=5000

chdir /home/columby/www/api.columby.com/dist/server
env NODE_ENV=development
env NODE_API_PORT=8000
env DOMAIN=http://dev-api.columby.com
env DATABASE_URL=postgres://user:pass@host:port/database
env DATABASE_POSTGIS_URL=postgres://user:pass@host:port/database
env MANDRILL_API_KEY=12345
env JWT_SECRET=12345
env GOOGLE_SECRET=12345
env AWS_ACCESS_KEY_ID=12345
env AWS_SECRET_ACCESS_KEY=12345
env S3_BUCKET_NAME=12345
env AWS_S3_ENDPOINT=12345
env EMBEDLY_KEY=12345


exec /usr/local/bin/forever -a -l $LOGFILE --minUptime $MIN_UPTIME --spinSleepTime $SPIN_SLEEP_TIME --killSignal $KILL_SIGNAL  --watchDirectory ./ -w --uid columby-api start server.js

post-start script
        echo "columby-api started"
end script


pre-stop script

        echo "Shutting down columby-api: "

        STATUS=$(/usr/local/bin/forever --plain list | sed 's/data:\(\s*\[[0-9]*\]\s*\(columby-api\)\s.*\)/\2-status:\1/;tx;d;:x')
        if [ -z "$STATUS" ]; then
                echo "Not running"
                return 0
        fi

        # PID=$(<$PIDFILE) - Changed to detection based on actual PID from forever, sicne due to watchDirectory pid could dynamically change
        PID=$(/usr/local/bin/forever --plain list | sed -n -e '/data:\s*\[[0-9]*\]\s\(columby-api\)\s/p' | awk '{print $7}')
        if [ -z "$PID" ]; then
                echo "Could not get pid"
                return 0
        fi

        /usr/local/bin/forever stop columby-api &

        killtree() {
            local _pid=$1
            local _sig=${2:--TERM}
            kill -stop ${_pid} # needed to stop quickly forking parent from producing children between child killing and parent killing
            for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
                killtree ${_child} ${_sig}
            done
            kill -${_sig} ${_pid}
        }

        CURRENTWAITTIME=$KILLWAITTIME
        # wait for some time before forcefully killing the process
        while [ $CURRENTWAITTIME -gt 0 ]; do
                #check if the process is still running
                if [ ! -d "/proc/$PID" ]; then
                        echo "columby-api shutdown"
                        # if not running we can break, since no more wait is needed, service is stopped
                        break
                fi
                sleep 1
                CURRENTWAITTIME=$(( $CURRENTWAITTIME - 1000))
        done
        if [ -d "/proc/$PID" ]; then
                killtree $PID 9
                echo "columby-api Forced shutdown"
        fi

end script
